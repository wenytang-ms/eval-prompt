openapi: 3.0.3
info:
  title: Flask Web API
  description: A simple Web API built with Flask and Flask-RESTful, including endpoints for greeting and calculating squares.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
tags:
  - name: Greeting
    description: Operations related to greeting messages.
  - name: Math
    description: Operations related to mathematical calculations.
paths:
  /:
    get:
      summary: Get Greeting Message
      description: Returns a greeting message.
      tags:
        - Greeting
      operationId: getGreeting
      responses:
        '200':
          description: A successful response with a greeting message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: hello world
    post:
      summary: Create Data
      description: Accepts a JSON payload and echoes it back in the response.
      tags:
        - Greeting
      operationId: createData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '201':
          description: Data successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /square/{num}:
    get:
      summary: Calculate Square
      description: Returns the square of a given integer.
      tags:
        - Math
      operationId: calculateSquare
      parameters:
        - name: num
          in: path
          required: true
          description: The integer to square.
          schema:
            type: integer
            example: 4
      responses:
        '200':
          description: A successful response with the square of the number.
          content:
            application/json:
              schema:
                type: object
                properties:
                  square:
                    type: integer
                    example: 16
components: {}