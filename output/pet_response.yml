openapi: 3.0.3
info:
  title: Pets API
  description: An API to manage pets data (CRUD operations for pets).
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
    url: http://example.com/support
servers:
  - url: http://localhost:3000
    description: Local server
tags:
  - name: Pets
    description: Operations related to pets management
paths:
  /api/pets:
    get:
      tags:
        - Pets
      summary: Get all pets
      description: Retrieve a list of all pets.
      operationId: getPets
      responses:
        '200':
          description: A list of pets.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      tags:
        - Pets
      summary: Create a new pet
      description: Add a new pet to the list.
      operationId: createPet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetInput'
      responses:
        '200':
          description: The created pet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
  /api/pets/{id}:
    get:
      tags:
        - Pets
      summary: Get a pet by ID
      description: Retrieve a pet by its unique ID.
      operationId: getPetById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the pet to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: The requested pet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found.
    put:
      tags:
        - Pets
      summary: Update a pet by ID
      description: Update the details of an existing pet by its ID.
      operationId: updatePet
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the pet to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetInput'
      responses:
        '200':
          description: The updated pet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found.
    delete:
      tags:
        - Pets
      summary: Delete a pet by ID
      description: Remove a pet from the list by its ID.
      operationId: deletePet
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the pet to delete.
          schema:
            type: integer
      responses:
        '200':
          description: The deleted pet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found.
components:
  schemas:
    Pet:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID of the pet.
        name:
          type: string
          description: The name of the pet.
        type:
          type: string
          description: The type of the pet (e.g., Dog, Cat).
      required:
        - id
        - name
        - type
   